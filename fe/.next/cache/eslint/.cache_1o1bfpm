[{"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\pages\\index.tsx":"1","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\pages\\upload.tsx":"2","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\pages\\_app.tsx":"3","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\Home\\Home.tsx":"4","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\Home\\index.ts":"5","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\index.ts":"6","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\Upload\\index.ts":"7","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\Upload\\Upload.tsx":"8","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Banner\\Banner.tsx":"9","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Banner\\index.ts":"10","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Footer\\Footer.tsx":"11","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Footer\\index.ts":"12","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Form\\Form.tsx":"13","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Form\\index.ts":"14","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Header\\const.ts":"15","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Header\\Header.tsx":"16","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Header\\index.ts":"17","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\index.ts":"18","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Input\\index.ts":"19","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Input\\Input.tsx":"20","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Layout\\index.ts":"21","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Layout\\Layout.tsx":"22","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Modal\\index.ts":"23","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Modal\\Modal.tsx":"24"},{"size":213,"mtime":1649998756462,"results":"25","hashOfConfig":"26"},{"size":237,"mtime":1649991744996,"results":"27","hashOfConfig":"26"},{"size":422,"mtime":1650006332939,"results":"28","hashOfConfig":"26"},{"size":903,"mtime":1649990192248,"results":"29","hashOfConfig":"26"},{"size":49,"mtime":1649984838882,"results":"30","hashOfConfig":"26"},{"size":82,"mtime":1649992150039,"results":"31","hashOfConfig":"26"},{"size":53,"mtime":1649991687791,"results":"32","hashOfConfig":"26"},{"size":5692,"mtime":1650077276505,"results":"33","hashOfConfig":"26"},{"size":1665,"mtime":1650078548935,"results":"34","hashOfConfig":"26"},{"size":53,"mtime":1649989633867,"results":"35","hashOfConfig":"26"},{"size":156,"mtime":1649986294668,"results":"36","hashOfConfig":"26"},{"size":53,"mtime":1649986028329,"results":"37","hashOfConfig":"26"},{"size":773,"mtime":1649996869081,"results":"38","hashOfConfig":"26"},{"size":47,"mtime":1649992704658,"results":"39","hashOfConfig":"26"},{"size":98,"mtime":1650007866813,"results":"40","hashOfConfig":"26"},{"size":5561,"mtime":1650070922471,"results":"41","hashOfConfig":"26"},{"size":53,"mtime":1649986050184,"results":"42","hashOfConfig":"26"},{"size":298,"mtime":1649996051763,"results":"43","hashOfConfig":"26"},{"size":50,"mtime":1649995700394,"results":"44","hashOfConfig":"26"},{"size":2517,"mtime":1649997030409,"results":"45","hashOfConfig":"26"},{"size":55,"mtime":1649985925745,"results":"46","hashOfConfig":"26"},{"size":394,"mtime":1650003947864,"results":"47","hashOfConfig":"26"},{"size":50,"mtime":1649992143285,"results":"48","hashOfConfig":"26"},{"size":508,"mtime":1649992578629,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oilym3",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\pages\\index.tsx",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\pages\\upload.tsx",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\pages\\_app.tsx",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\Home\\Home.tsx",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\Home\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\Upload\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\pages\\Upload\\Upload.tsx",["126"],[],"import { faEdit, faTrash, faTrashCan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Form, Layout, Modal } from \"components\";\r\nimport readFile from \"helpers/readFile\";\r\nimport { ChangeEvent, CSSProperties, FunctionComponent, useEffect, useState } from \"react\";\r\n\r\ninterface Data {\r\n    img: any,\r\n    border: string,\r\n    ratioX: number,\r\n    ratioY: number,\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nconst baseData = {\r\n    img: null,\r\n    border: 'full-black',\r\n    ratioX: 1,\r\n    ratioY: 1,\r\n    x: 0, y: 0,\r\n}\r\n\r\nconst Upload: FunctionComponent = () => {\r\n    const [Data, setData] = useState<Data[]>([{ ...baseData }])\r\n\r\n    const [ModalData, setModalData] = useState<any>(null)\r\n\r\n    const handleChangeImage = async (event: ChangeEvent<HTMLInputElement>, index) => {\r\n        event.persist()\r\n        console.log(index);\r\n        const file = event?.target?.files?.[0]\r\n        if (!file) return\r\n        const url = await readFile(file)\r\n\r\n        setData(_data => {\r\n            _data[index].img = url\r\n            if (_data[_data.length - 1].img) _data.push({ ...baseData })\r\n            return [..._data]\r\n        })\r\n    }\r\n\r\n    const handleDelete = (e, index) => {\r\n        e.preventDefault()\r\n        Data.splice(index, 1)\r\n        setData([...Data])\r\n    }\r\n\r\n    const handleEdit = (e, o, index) => {\r\n        e.preventDefault()\r\n        setModalData({\r\n            ...o,\r\n            index\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(ModalData) {\r\n            Data[ModalData.index] = {...ModalData}\r\n            setData([...Data])\r\n        }\r\n    },[ModalData,Data])\r\n\r\n    const handleChangeEdit = (value) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            ...value\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <div className=\"upload\">\r\n                    <Modal show={ModalData} onClose={() => setModalData(null)}>\r\n                        <div className=\"edit-modal\">\r\n                            <div className=\"row-input\">\r\n                                <div className=\"label\">Vị trí ngang</div>\r\n                                <input onChange={(e)=>handleChangeEdit({x : e.target.value})} type=\"number\" value={ModalData?.x} />\r\n                            </div>\r\n                            <div className=\"row-input\">\r\n                                <div className=\"label\">Vị trí dọc</div>\r\n                                <input onChange={(e)=>handleChangeEdit({y : e.target.value})} type=\"number\" value={ModalData?.y} />\r\n                            </div>\r\n                            <div className=\"row-input\">\r\n                                <div className=\"label\">Viền</div>\r\n                                <select onChange={(e)=>handleChangeEdit({border : e.target.value})} value={ModalData?.border}>\r\n                                    <option value=\"full-black\">Viền đen</option>\r\n                                    <option value=\"full-white\">Viền trắng</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"row-input\">\r\n                                <div className=\"label\">Tỉ lệ ngang</div>\r\n                                <input onChange={(e)=>handleChangeEdit({ratioX : e.target.value})} value={ModalData?.ratioX} type=\"number\" />\r\n                            </div>\r\n                            <div className=\"row-input\">\r\n                                <div className=\"label\">Tỉ lệ dọc</div>\r\n                                <input onChange={(e)=>handleChangeEdit({ratioY : e.target.value})} value={ModalData?.ratioY} type=\"number\" />\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                    <div className=\"list-image\">\r\n                        {\r\n                            Data.map((o, index) => <label\r\n                                htmlFor={'imagepick' + index}\r\n                                key={`img${index}`}\r\n                                style={{ aspectRatio: `${o.ratioX / o.ratioY}`, '--x': `${o.x}px`, '--y': `${o.y}px` } as CSSProperties}\r\n                                className={`image ${o.border} ${o.img ? 'picked' : ''}`}>\r\n                                {\r\n                                    !o.img && <>\r\n                                        <div className=\"plus\"></div>\r\n                                    </>\r\n                                }\r\n                                {\r\n                                    o.img && <>\r\n                                        <div onClick={(e) => handleDelete(e, index)} className=\"delete\">\r\n                                            <FontAwesomeIcon icon={faTrashCan} />\r\n                                        </div>\r\n                                        <div onClick={e => handleEdit(e, o, index)} className=\"edit\">\r\n                                            <FontAwesomeIcon icon={faEdit} />\r\n                                        </div>\r\n                                        <div className=\"img\">\r\n                                            <img src={o.img} alt=\"\" />\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                                <input onChange={(e) => handleChangeImage(e, index)} type=\"file\" name=\"\" id={'imagepick' + index} />\r\n                            </label>)\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Upload","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Banner\\Banner.tsx",["127","128"],[],"import Link from \"next/link\"\r\nimport { CSSProperties, FunctionComponent, useEffect, useState } from \"react\"\r\n\r\ninterface item {\r\n    img: string,\r\n    link?: string\r\n}\r\n\r\ninterface Banner {\r\n    items: item[],\r\n    loop?: boolean,\r\n    interval?: number\r\n}\r\n\r\nconst Banner: FunctionComponent<Banner> = ({ items, loop = true, interval = 5000 }) => {\r\n    const [Current, setCurrent] = useState(0)\r\n    useEffect(() => {\r\n        let timeout : any;\r\n        if (loop) {\r\n            timeout = setTimeout(() => {\r\n                if (Current + 1 > items.length - 1) setCurrent(0)\r\n                else setCurrent(Current + 1)\r\n            }, interval);\r\n\r\n        }\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    }, [Current, items, loop])\r\n    return (\r\n        <>\r\n            <div className=\"banner\">\r\n                <div className=\"track\">\r\n                    <div style={{ '--total': items.length, '--current': Current } as CSSProperties} className=\"list\">\r\n                        {\r\n                            items.map((o,i) => <div key={o.img+i} className=\"item\">\r\n                                <img className=\"cover\" src={o.img} alt=\"\" />\r\n                            </div>)\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"dots\">\r\n                        {\r\n                            items.map((o,index) => <div key={o.link + 'index'} onClick={()=>setCurrent(index)} className={`dot ${Current === index? 'active' : ''}`}></div> )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Banner","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Banner\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Footer\\Footer.tsx",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Footer\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Form\\Form.tsx",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Form\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Header\\const.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Header\\Header.tsx",["129"],[],"import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport callAPI from \"call\";\r\nimport { Modal, Form, Input } from \"components\";\r\nimport storage from \"helpers/storage\";\r\nimport Link from \"next/link\";\r\nimport { FC, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { asyncGetUser } from \"store/initActions\";\r\nimport { MENU } from \"./const\";\r\n\r\nconst Header: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector((state : any) => state.user)\r\n    const popoverRef = useRef<any>()\r\n    const [ShowModalLogin, setShowModalLogin] = useState(false)\r\n    const [ShowModalSignup, setShowModalSignup] = useState(false)\r\n    const [ShowPopover, setShowPopover] = useState(false)\r\n    const handleLogin = async (data: any) => {\r\n        const res = await callAPI.post('/auth' , {...data})\r\n        if(res.msg === 'not existed' ||res.msg === 'not valid email' || res.status === 100) return toast('Email hoặc mật khẩu không chính xác')\r\n        \r\n        if(res.status === 1) toast(\"Đăng nhập thành công\")\r\n        setShowModalLogin(false)\r\n        storage.setToken(res.token)\r\n        dispatch(asyncGetUser())\r\n    }\r\n\r\n    const handleSignup = async (data: any) => {\r\n        if (data.password !== data.repassword) {\r\n            return toast('Nhập lại mật khẩu không khớp')\r\n        }\r\n        const res = await callAPI.post('/user', data)\r\n        if(res.msg === 'not valid email') return toast('Email không hợp lệ')\r\n        if(res.msg === 'wrong length') return toast('Mật khẩu phải từ 6-18 kí tự')\r\n        if(res.msg === 'existed') return toast('Email đã được sử dụng')\r\n        if(res.status === 1) toast('Đăng ký thành công')\r\n        setShowModalSignup(false)\r\n        setShowModalLogin(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const toggle = event => {\r\n            if(!event.path.includes(popoverRef.current)) {\r\n                setShowPopover(false)\r\n            }\r\n        }\r\n        window.addEventListener('click' , toggle)\r\n        return () => {\r\n            window.removeEventListener('click',toggle)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <Modal show={ShowModalLogin} onClose={() => setShowModalLogin(false)} >\r\n                <Form onSubmit={handleLogin}>\r\n                    <div className=\"title\">Đăng nhập</div>\r\n                    <Input name=\"email\" placeholder=\"Email\" />\r\n                    <Input name=\"password\" type=\"password\" placeholder=\"Mật khấu\" />\r\n                    <button className=\"button highlight\">Đăng nhập</button>\r\n                </Form>\r\n            </Modal>\r\n            <Modal show={ShowModalSignup} onClose={() => setShowModalSignup(false)} >\r\n                <Form onSubmit={handleSignup}>\r\n                    <div className=\"title\">Đăng ký</div>\r\n                    <Input name=\"email\" placeholder=\"Email\" />\r\n                    <Input name=\"password\" type=\"password\" placeholder=\"Mật khấu\" />\r\n                    <Input name=\"repassword\" type=\"password\" placeholder=\"Nhập lại mật khấu\" />\r\n                    <button className=\"button highlight\">Đăng ký</button>\r\n                </Form>\r\n            </Modal>\r\n            <header>\r\n                <Link href='/'>\r\n                    <a className=\"logo\">\r\n                        <img src=\"/images/logo.png\" alt=\"\" />\r\n                    </a>\r\n                </Link>\r\n                <div className=\"menu\">\r\n                    <ul>\r\n                        {\r\n                            MENU.map(o => <li key={o.text}>\r\n                                <Link href={o.link}>\r\n                                    <a>{o.text}</a>\r\n                                </Link>\r\n                            </li>)\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                {!user && <div className=\"profile\">\r\n                    <div onClick={() => setShowModalLogin(true)} className=\"button\">Đăng nhập</div>\r\n                    <div onClick={() => setShowModalSignup(true)} className=\"button highlight\">Đăng ký</div>\r\n                </div>}\r\n                {\r\n                    user && <div ref={popoverRef}  onClick={()=>setShowPopover(!ShowPopover)} className=\"profile loged\">\r\n                        <div className=\"name\">{user.email}</div>\r\n                        <div className=\"icon\"> <FontAwesomeIcon icon={faUser} /></div>\r\n                        <div className={`popover ${ShowPopover ? 'show' : ''} `}>\r\n                            <ul>\r\n                                <li>\r\n                                    <Link href='/cart'><a> Giỏ hàng</a></Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link href='/history'><a>Đơn hàng</a></Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link href='/profile'><a>Thông tin cá nhân</a></Link>\r\n                                </li>\r\n                                <li onClick={()=> window.location.reload()}>\r\n                                    Đăng xuất\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Header\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Input\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Input\\Input.tsx",["130"],[],"import { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { FC, useEffect, useState } from \"react\"\r\ninterface IInput {\r\n    label?: any,\r\n    type?: string,\r\n    placeholder?: string,\r\n    name?: string,\r\n    onChange?(value: string): any,\r\n    onFocus?(): any,\r\n    onBlur?(): any,\r\n    defaultValue?: string,\r\n    [k: string]: any\r\n}\r\nconst Input: FC<IInput> = function ({\r\n    label,\r\n    type = 'text',\r\n    name = \"\",\r\n    placeholder = '',\r\n    onChange = () => { },\r\n    onFocus = () => { },\r\n    onBlur = () => { },\r\n    defaultValue = '',\r\n    ...rest\r\n}) {\r\n    const [CurrentType, setCurrentType] = useState(type)\r\n    const [IsPassword, setIsPassword] = useState(type === 'password')\r\n    const [Active, setActive] = useState(!!defaultValue || false)\r\n    const [Value, setValue] = useState(defaultValue)\r\n\r\n    useEffect(() => {\r\n        defaultValue !== '' && setActive(true)\r\n        setValue(defaultValue)\r\n    }, [defaultValue])\r\n\r\n    const onChangeInput = (e : any) => {\r\n        setValue(e.target.value);\r\n        onChange(e.target.value)\r\n    }\r\n\r\n    const onFocusInput = () => {\r\n        onFocus()\r\n        setActive(true)\r\n    }\r\n    const onBlurInput = () => {\r\n        Value === '' && setActive(false)\r\n        onBlur()\r\n    }\r\n    useEffect(() => {\r\n        setCurrentType(IsPassword ? 'password' : 'text')\r\n    }, [IsPassword])\r\n    return (\r\n        <>\r\n            <div className=\"row-input\" {...rest}>\r\n                {\r\n                    label && <div className=\"label\">\r\n                        <img src={label} alt=\"\" />\r\n                    </div>\r\n                }\r\n                <div className={`input-placeholder ${Active ? 'active' : ''}`}>\r\n                <span className=\"placeholder\">{placeholder}</span>\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    onFocus={onFocusInput}\r\n                    onBlur={onBlurInput}\r\n                    onChange={onChangeInput}\r\n                    name={name}\r\n                    value={Value}\r\n                    type={CurrentType} />\r\n                {\r\n                    type === 'password' ?\r\n                        <div onClick={() => setIsPassword(!IsPassword)}  className=\"eye\"><FontAwesomeIcon icon={!IsPassword ? faEyeSlash : faEye } /></div> :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input","C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Layout\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Layout\\Layout.tsx",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Modal\\index.ts",[],[],"C:\\Users\\Pham Gia Vy\\Documents\\GitHub\\decornow\\fe\\src\\components\\Modal\\Modal.tsx",[],[],{"ruleId":"131","severity":1,"message":"132","line":124,"column":45,"nodeType":"133","endLine":124,"endColumn":71},{"ruleId":"134","severity":1,"message":"135","line":29,"column":8,"nodeType":"136","endLine":29,"endColumn":30,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"132","line":37,"column":33,"nodeType":"133","endLine":37,"endColumn":77},{"ruleId":"131","severity":1,"message":"132","line":77,"column":25,"nodeType":"133","endLine":77,"endColumn":62},{"ruleId":"131","severity":1,"message":"132","line":57,"column":25,"nodeType":"133","endLine":57,"endColumn":51},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'interval'. Either include it or remove the dependency array.","ArrayExpression",["138"],{"desc":"139","fix":"140"},"Update the dependencies array to be: [Current, interval, items, loop]",{"range":"141","text":"142"},[741,763],"[Current, interval, items, loop]"]