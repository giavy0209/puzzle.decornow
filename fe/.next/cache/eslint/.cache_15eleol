[{"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\index.tsx":"1","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\upload.tsx":"2","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\_app.tsx":"3","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Home\\Home.tsx":"4","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Home\\index.ts":"5","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\index.ts":"6","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Upload\\index.ts":"7","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Upload\\Upload.tsx":"8","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Banner\\Banner.tsx":"9","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Banner\\index.ts":"10","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Footer\\Footer.tsx":"11","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Footer\\index.ts":"12","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Form\\Form.tsx":"13","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Form\\index.ts":"14","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\const.ts":"15","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\Header.tsx":"16","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\index.ts":"17","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\index.ts":"18","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Input\\index.ts":"19","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Input\\Input.tsx":"20","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Layout\\index.ts":"21","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Layout\\Layout.tsx":"22","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Modal\\index.ts":"23","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Modal\\Modal.tsx":"24","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\cart.tsx":"25","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\product\\[product].tsx":"26","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\product-detail\\[product-detail].tsx":"27","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Cart\\Cart.tsx":"28","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Cart\\index.ts":"29","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Product\\index.ts":"30","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Product\\Product.tsx":"31","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\ProductDetail\\index.ts":"32","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\ProductDetail\\ProductDetail.tsx":"33","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Pagination\\index.ts":"34","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Pagination\\Pagination.tsx":"35"},{"size":216,"mtime":1650354287615,"results":"36","hashOfConfig":"37"},{"size":237,"mtime":1649991744996,"results":"38","hashOfConfig":"37"},{"size":1159,"mtime":1650419892679,"results":"39","hashOfConfig":"37"},{"size":5540,"mtime":1650354463974,"results":"40","hashOfConfig":"37"},{"size":49,"mtime":1649984838882,"results":"41","hashOfConfig":"37"},{"size":226,"mtime":1650435533164,"results":"42","hashOfConfig":"37"},{"size":53,"mtime":1649991687791,"results":"43","hashOfConfig":"37"},{"size":15536,"mtime":1650506753399,"results":"44","hashOfConfig":"37"},{"size":1709,"mtime":1650245103934,"results":"45","hashOfConfig":"37"},{"size":53,"mtime":1649989633867,"results":"46","hashOfConfig":"37"},{"size":3051,"mtime":1650245604366,"results":"47","hashOfConfig":"37"},{"size":53,"mtime":1649986028329,"results":"48","hashOfConfig":"37"},{"size":773,"mtime":1649996869081,"results":"49","hashOfConfig":"37"},{"size":47,"mtime":1649992704658,"results":"50","hashOfConfig":"37"},{"size":161,"mtime":1650245747715,"results":"51","hashOfConfig":"37"},{"size":6841,"mtime":1650435438095,"results":"52","hashOfConfig":"37"},{"size":53,"mtime":1649986050184,"results":"53","hashOfConfig":"37"},{"size":350,"mtime":1650363850055,"results":"54","hashOfConfig":"37"},{"size":50,"mtime":1649995700394,"results":"55","hashOfConfig":"37"},{"size":2517,"mtime":1649997030409,"results":"56","hashOfConfig":"37"},{"size":55,"mtime":1649985925745,"results":"57","hashOfConfig":"37"},{"size":307,"mtime":1650354433844,"results":"58","hashOfConfig":"37"},{"size":50,"mtime":1649992143285,"results":"59","hashOfConfig":"37"},{"size":508,"mtime":1649992578629,"results":"60","hashOfConfig":"37"},{"size":229,"mtime":1650435546914,"results":"61","hashOfConfig":"37"},{"size":1050,"mtime":1650421706808,"results":"62","hashOfConfig":"37"},{"size":829,"mtime":1650421668878,"results":"63","hashOfConfig":"37"},{"size":9834,"mtime":1650510317038,"results":"64","hashOfConfig":"37"},{"size":47,"mtime":1650435524383,"results":"65","hashOfConfig":"37"},{"size":58,"mtime":1650353408468,"results":"66","hashOfConfig":"37"},{"size":1718,"mtime":1650510231687,"results":"67","hashOfConfig":"37"},{"size":74,"mtime":1650420342872,"results":"68","hashOfConfig":"37"},{"size":4896,"mtime":1650435306098,"results":"69","hashOfConfig":"37"},{"size":65,"mtime":1650363843270,"results":"70","hashOfConfig":"37"},{"size":632,"mtime":1650420178590,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cj44dy",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\index.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\upload.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\_app.tsx",["185"],[],"import 'assets/scss/styles.scss'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nimport AOS from 'aos'\nimport 'aos/dist/aos.css'\n\nimport 'antd/dist/antd.css';\nimport { useEffect } from 'react';\nimport callAPI from 'call';\nimport { Footer, Header } from 'components';\nimport { ToastContainer } from 'react-toastify';\nimport Head from 'next/head';\n\n\nlet navigationPropsCache;\n\nfunction MyApp({ Component, pageProps, navigationProps }) {\n  useEffect(() => {\n    AOS.init()\n    navigationPropsCache = navigationProps\n  }, [])\n  return <Provider store={store}>\n    <Head>\n      <meta property=\"og:type\" content=\"website\" />\n\n    </Head>\n    <ToastContainer />\n    <Header menu={navigationProps} />\n    <Component {...pageProps} />\n    <Footer />\n  </Provider>\n}\n\nMyApp.getInitialProps = async () => {\n  if (navigationPropsCache) {\n    return { navigationProps: navigationPropsCache }\n  }\n\n  const res = await callAPI.get('/categories_nested')\n\n  return { navigationProps: res.data }\n}\n\n\nexport default MyApp\n","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Home\\Home.tsx",["186","187","188","189","190","191"],[],"import { NextPage } from \"next\";\r\nimport { Banner, Layout } from 'components'\r\nconst Home: NextPage = () => {\r\n    return (\r\n        <>\r\n            <div className=\"home\">\r\n                <Banner dots={false} items={[{ img: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg' }]} />\r\n                <section className=\"ss_1\">\r\n                    <div className=\"container\">\r\n                        <iframe width=\"100%\" style={{ aspectRatio: '16 / 9' }} src=\"https://www.youtube.com/embed/_0NrayhpdA0\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                        <div className=\"button\">Bắt đầu thiết kế</div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"ss_2\">\r\n                    <div className=\"container\">\r\n                        <div className=\"title\">BEST SELLER</div>\r\n                        <div className=\"row column-6\">\r\n                            <div className=\"item\">\r\n                                <div className=\"img\">\r\n                                    <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"name\">\r\n                                    THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <div className=\"img\">\r\n                                    <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"name\">\r\n                                    THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <div className=\"img\">\r\n                                    <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"name\">\r\n                                    THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <div className=\"img\">\r\n                                    <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"name\">\r\n                                    THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <div className=\"img\">\r\n                                    <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"name\">\r\n                                    THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <div className=\"img\">\r\n                                    <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"name\">\r\n                                    THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"ss_3\">\r\n                    <div className=\"container\">\r\n                        <div className=\"title\">PLUZZLE{`'`}S MESSAGE</div>\r\n                        <p>Chất liệu gỗ khiến cho sản phẩm trở nên độc đáo và sang trọng hơn. Đặc biệt, việc sử dụng công nghệ in UV với mực cao cấp tạo nên độ bền màu cao. Sản phẩm của Pluzzle được thiết kế và sản xuất tại Việt Nam. Sản phẩm gửi tới bạn chứa đựng tình yêu và tâm huyết của chúng mình. Hy vọng các bạn luôn hài lòng khi trải nghiệm sản phẩm của chúng mình.Pluzzle.vn</p>\r\n                    </div>\r\n                </section>\r\n                <section className=\"ss_4\">\r\n                    <div className=\"container\">\r\n                        <div className=\"title\">COLLECTION LIST</div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Home\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Upload\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Upload\\Upload.tsx",["192","193","194","195","196","197"],[],"import { faEdit, faTrash, faTrashCan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Form, Layout, Modal } from \"components\";\r\nimport readFile from \"helpers/readFile\";\r\nimport { ChangeEvent, CSSProperties, FunctionComponent, useEffect, useRef, useState } from \"react\";\r\nimport { AiFillHeart } from \"react-icons/ai\";\r\nimport { FaArrowAltCircleDown, FaArrowAltCircleLeft, FaArrowAltCircleRight, FaArrowAltCircleUp, FaMinus, FaPlus } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { actionChangeCart } from \"store/actions\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst slice = [\r\n    {\r\n        slice: '/images/slice_1.png',\r\n        sliceIcon: '/images/slice_icon_1.png',\r\n    },\r\n    {\r\n        slice: '/images/slice_2.png',\r\n        sliceIcon: '/images/slice_icon_2.png',\r\n    },\r\n    {\r\n        slice: '/images/slice_3.png',\r\n        sliceIcon: '/images/slice_icon_3.png',\r\n    },\r\n    {\r\n        slice: '/images/slice_4.png',\r\n        sliceIcon: '/images/slice_icon_4.png',\r\n    },\r\n]\r\n\r\nconst Upload: FunctionComponent = () => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector((state : any) => state.cart)\r\n    const [SelectedSlice, setSelectedSlice] = useState(slice[0])\r\n    const [SelectedFrame, setSelectedFrame] = useState(1)\r\n    const [Size, setSize] = useState({ w: 3000, h: 3000 })\r\n    const [ImagePos, setImagePos] = useState({ x: 0, y: 0 })\r\n    const [ImageRatio, setImageRatio] = useState<number | null>(null)\r\n\r\n    const [ImageSrc, setImageSrc] = useState<null | string>(null)\r\n    const initialRatio = useRef<number | null>(null)\r\n    const canvas = useRef<HTMLCanvasElement>(null)\r\n    const ctx = useRef<CanvasRenderingContext2D | null>()\r\n    useEffect(() => {\r\n        if (canvas.current && !ctx.current) {\r\n            ctx.current = canvas.current.getContext('2d')\r\n        }\r\n        if (canvas.current) {\r\n            canvas.current.width = Size.w\r\n            canvas.current.height = Size.h\r\n        }\r\n    }, [Size])\r\n\r\n\r\n    const createPattern = async () => {\r\n        const img = await loadImage()\r\n        const imgW = img.width;\r\n        const imgH = img.height\r\n        const canvasPtrn = document.createElement('canvas')\r\n        canvasPtrn.width = Size.w\r\n        canvasPtrn.height = Size.h\r\n        const ctxPtrn = canvasPtrn.getContext('2d')\r\n        const percentX = Size.w / imgW;\r\n        const percentY = Size.h / imgH\r\n        const ratio = Math.min(percentX, percentY)\r\n\r\n        if (!initialRatio.current) initialRatio.current = ratio\r\n        if (ImageRatio === null) {\r\n            setImageRatio(initialRatio.current)\r\n            ctxPtrn?.drawImage(\r\n                img,\r\n                0, 0,\r\n                imgW, imgH,\r\n                ImagePos.x, ImagePos.y,\r\n                Size.w * initialRatio.current, Size.h * initialRatio.current\r\n            )\r\n        } else {\r\n            ctxPtrn?.drawImage(\r\n                img,\r\n                0, 0,\r\n                imgW, imgH,\r\n                ImagePos.x, ImagePos.y,\r\n                Size.w * ImageRatio, Size.h * ImageRatio\r\n            )\r\n        }\r\n        return canvasPtrn\r\n    }\r\n\r\n    const loadImage = (): Promise<HTMLImageElement> => new Promise(r => {\r\n        if (ImageSrc) {\r\n            const img = new Image();\r\n            img.src = ImageSrc\r\n            img.onload = () => {\r\n                r(img)\r\n            }\r\n        } else {\r\n        }\r\n    })\r\n\r\n    const drawSlice = (): Promise<any> => new Promise(r => {\r\n        const img = new Image()\r\n        img.src = SelectedSlice.slice\r\n        img.onload = () => {\r\n            const canvasPtrn = document.createElement('canvas')\r\n            canvasPtrn.width = Size.w\r\n            canvasPtrn.height = Size.h\r\n            const ctxPtrn = canvasPtrn.getContext('2d')\r\n            ctxPtrn?.drawImage(img, 0, 0, img.width, img.height, 0, 0, Size.w, Size.h)\r\n            r(canvasPtrn)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (ctx.current) {\r\n            ctx.current.clearRect(0, 0, Size.w, Size.h)\r\n            ctx.current.fillStyle = '#ccc'\r\n            ctx.current.beginPath();\r\n            if (SelectedFrame === 0 || SelectedFrame === 1) {\r\n                ctx.current.fillRect(0, 0, Size.w, Size.h)\r\n                if (ImageSrc) {\r\n                    createPattern()\r\n                        .then(cP => {\r\n                            if (ctx.current) {\r\n                                const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                ctx.current.fillStyle = pattern\r\n                                ctx.current.fillRect(0, 0, Size.w, Size.h)\r\n                            }\r\n                            drawSlice()\r\n                                .then(cP => {\r\n                                    if (ctx.current) {\r\n                                        const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                        ctx.current.fillStyle = pattern\r\n                                        ctx.current.fillRect(0, 0, Size.w, Size.h)\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            }\r\n            if (SelectedFrame === 2) {\r\n                ctx.current.arc(\r\n                    Size.w / 2,\r\n                    Size.h / 2,\r\n                    Size.w / 2,\r\n                    0,\r\n                    Math.PI * 2\r\n                )\r\n                ctx.current.fill()\r\n\r\n                if (ImageSrc) {\r\n                    createPattern()\r\n                        .then(cP => {\r\n                            if (ctx.current) {\r\n                                const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                ctx.current.fillStyle = pattern\r\n                                ctx.current.fill()\r\n                            }\r\n                            drawSlice()\r\n                                .then(cP => {\r\n                                    if (ctx.current) {\r\n                                        const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                        ctx.current.fillStyle = pattern\r\n                                        ctx.current.fill()\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            }\r\n            if (SelectedFrame === 3) {\r\n                const x = Size.w / 2\r\n                const y = Size.h / 4;\r\n                const xPadding = x / 50\r\n                ctx.current.lineWidth = 10\r\n                ctx.current.moveTo(x, y)\r\n                ctx.current.bezierCurveTo(x, 0, xPadding, 0, xPadding, y);\r\n                ctx.current.bezierCurveTo(0, Size.h / 2, x / 4, y * 2, x, Size.h)\r\n                ctx.current.bezierCurveTo(Size.w - x / 4, y * 2, Size.w, Size.h / 2, Size.w - xPadding, y);\r\n                ctx.current.bezierCurveTo(Size.w - xPadding, 0, x, 0, x, y);\r\n                ctx.current.strokeStyle = '#000';\r\n                ctx.current.fill()\r\n\r\n                if (ImageSrc) {\r\n                    createPattern()\r\n                        .then(cP => {\r\n                            if (ctx.current) {\r\n                                const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                ctx.current.fillStyle = pattern\r\n                                ctx.current.fill()\r\n                            }\r\n                            drawSlice()\r\n                                .then(cP => {\r\n                                    if (ctx.current) {\r\n                                        const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                        ctx.current.fillStyle = pattern\r\n                                        ctx.current.fill()\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            }\r\n            drawSlice()\r\n            ctx.current.closePath();\r\n        }\r\n\r\n\r\n    }, [Size, SelectedFrame, ImagePos, ImageSrc, ImageRatio, SelectedSlice])\r\n\r\n\r\n    useEffect(() => {\r\n        setImageRatio(null)\r\n        initialRatio.current = null\r\n        if (SelectedFrame === 0) {\r\n            setSize({\r\n                w: 2100,\r\n                h: 3000\r\n            })\r\n        }\r\n        if (SelectedFrame === 1) {\r\n            setSize({\r\n                w: 3000,\r\n                h: 3000\r\n            })\r\n        }\r\n        if (SelectedFrame === 2) {\r\n            setSize({\r\n                w: 3000,\r\n                h: 3000\r\n            })\r\n        }\r\n        if (SelectedFrame === 3) {\r\n            setSize({\r\n                w: 2700,\r\n                h: 3000\r\n            })\r\n        }\r\n    }, [SelectedFrame])\r\n\r\n    const downSize = () => {\r\n        if (ImageRatio && initialRatio.current) {\r\n            setImageRatio(ImageRatio - initialRatio.current / 50)\r\n        }\r\n    }\r\n\r\n    const upSize = () => {\r\n        if (ImageRatio && initialRatio.current) {\r\n            setImageRatio(ImageRatio + initialRatio.current / 50)\r\n        }\r\n    }\r\n    const handleX = value => {\r\n        const x = Size.w / 100 * value\r\n        setImagePos({ ...ImagePos, x: ImagePos.x + x })\r\n    }\r\n    const handleY = value => {\r\n        const y = Size.h / 100 * value\r\n        setImagePos({ ...ImagePos, y: ImagePos.y + y })\r\n    }\r\n\r\n    const handleChangeImage = async (event: ChangeEvent<HTMLInputElement>) => {\r\n        event.persist()\r\n        const file = event?.target?.files?.[0]\r\n        if (!file) return\r\n        const url: string = (await readFile(file)) as string\r\n        setImageSrc(url)\r\n        setImageRatio(null)\r\n        initialRatio.current = null\r\n    }\r\n\r\n    const handleChangeSlide = (o) => {\r\n        setSelectedSlice(o)\r\n        initialRatio.current = null\r\n        setImageRatio(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleKey = e => {\r\n            e.preventDefault()\r\n            const keyCode = e.keyCode\r\n\r\n            if (keyCode === 189) {\r\n                downSize()\r\n            }\r\n\r\n            if (keyCode === 187) {\r\n                upSize()\r\n            }\r\n            if (keyCode === 39) {\r\n                handleX(1)\r\n            }\r\n            if (keyCode === 37) {\r\n                handleX(-1)\r\n            }\r\n            if (keyCode === 40) {\r\n                handleY(1)\r\n            }\r\n            if (keyCode === 38) {\r\n                handleY(-1)\r\n            }\r\n        }\r\n        document.addEventListener('keydown', handleKey)\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKey)\r\n        }\r\n    }, [downSize, upSize, handleX, handleY])\r\n    const handleAddToCart = () => {\r\n        if (!ImageSrc) return toast('Bạn chưa chọn hình ảnh')\r\n        const url = canvas.current?.toDataURL()\r\n        if (url) {\r\n            const splitDataURI = url.split(',')\r\n            const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\r\n            const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\r\n\r\n            const ia = new Uint8Array(byteString.length)\r\n            for (let i = 0; i < byteString.length; i++)\r\n                ia[i] = byteString.charCodeAt(i)\r\n\r\n            const file = new Blob([ia], { type: mimeString })\r\n            const blobURL = URL.createObjectURL(file)\r\n            \r\n            cart.push({\r\n                _id : uuidv4(),\r\n                thumbnail : blobURL,\r\n                file,\r\n                price : 500000,\r\n                quantity : 1\r\n            })\r\n            dispatch(actionChangeCart([...cart]))\r\n            toast('Đã thêm vào giỏ hàng')\r\n            setImageSrc(null)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"upload\">\r\n                <div className=\"container\">\r\n                    <div className=\"title\">THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN</div>\r\n                    <div className=\"flexbox mt-30\">\r\n                        <div className=\"col-6\">\r\n                            <div id=\"canvas\">\r\n                                <canvas ref={canvas}></canvas>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"upload\">\r\n                                <label htmlFor=\"upload\">\r\n                                    Tải hình lên\r\n                                </label>\r\n                                <input onChange={handleChangeImage} type=\"file\" name=\"\" id=\"upload\" />\r\n                            </div>\r\n                            <div className=\"controls\">\r\n                                <div onClick={upSize} className=\"control\"><FaPlus /></div>\r\n                                <div onClick={downSize} className=\"control\"><FaMinus /></div>\r\n                                <div onClick={() => handleY(-1)} className=\"control\"><FaArrowAltCircleUp /></div>\r\n                                <div onClick={() => handleY(1)} className=\"control\"><FaArrowAltCircleDown /></div>\r\n                                <div onClick={() => handleX(-1)} className=\"control\"><FaArrowAltCircleLeft /></div>\r\n                                <div onClick={() => handleX(1)} className=\"control\"><FaArrowAltCircleRight /></div>\r\n                                <p>Hoặc dùng phím +,- và mũi tên trên bàn phím để điều chỉnh</p>\r\n                            </div>\r\n\r\n                            <div className=\"frame\">\r\n                                <div className=\"title\">Khung hình</div>\r\n                                <div onClick={() => setSelectedFrame(0)} className={`frame_1 ${SelectedFrame === 0 ? 'selected' : ''}`}>\r\n                                    <span>Hình chữ nhật 21x30</span>\r\n                                </div>\r\n                                <div onClick={() => setSelectedFrame(1)} className={`frame_2 ${SelectedFrame === 1 ? 'selected' : ''}`}>Hình vuông 30x30</div>\r\n                                <div onClick={() => setSelectedFrame(2)} className={`frame_3 ${SelectedFrame === 2 ? 'selected' : ''}`}>Hình tròn 30x30</div>\r\n                                <div onClick={() => setSelectedFrame(3)} className={`frame_4 ${SelectedFrame === 3 ? 'selected' : ''}`}>\r\n                                    <AiFillHeart />\r\n                                    <span>Trái tim 27x30</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"slices\">\r\n                                <div className=\"title\">Đường cắt</div>\r\n\r\n                                {\r\n                                    slice.map(o => <div onClick={() => handleChangeSlide(o)} key={o.slice} className={`slice ${SelectedSlice.slice === o.slice ? 'selected' : ''}`}>\r\n                                        <img src={o.sliceIcon} alt=\"\" />\r\n                                    </div>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={handleAddToCart} className=\"button mt-20\">Thêm vào giỏ hàng</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Upload","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Banner\\Banner.tsx",["198","199"],[],"import Link from \"next/link\"\r\nimport { CSSProperties, FunctionComponent, useEffect, useState } from \"react\"\r\n\r\ninterface item {\r\n    img: string,\r\n    link?: string\r\n}\r\n\r\ninterface Banner {\r\n    items: item[],\r\n    loop?: boolean,\r\n    interval?: number,\r\n    dots? : boolean\r\n}\r\n\r\nconst Banner: FunctionComponent<Banner> = ({ items, loop = true, interval = 5000,dots = true }) => {\r\n    const [Current, setCurrent] = useState(0)\r\n    useEffect(() => {\r\n        let timeout : any;\r\n        if (loop) {\r\n            timeout = setTimeout(() => {\r\n                if (Current + 1 > items.length - 1) setCurrent(0)\r\n                else setCurrent(Current + 1)\r\n            }, interval);\r\n\r\n        }\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    }, [Current, items, loop])\r\n    return (\r\n        <>\r\n            <div className=\"banner\">\r\n                <div className=\"track\">\r\n                    <div style={{ '--total': items.length, '--current': Current } as CSSProperties} className=\"list\">\r\n                        {\r\n                            items.map((o,i) => <div key={o.img+i} className=\"item\">\r\n                                <img className=\"cover\" src={o.img} alt=\"\" />\r\n                            </div>)\r\n                        }\r\n\r\n                    </div>\r\n                    {dots && <div className=\"dots\">\r\n                        {\r\n                            items.map((o,index) => <div key={o.link + 'index'} onClick={()=>setCurrent(index)} className={`dot ${Current === index? 'active' : ''}`}></div> )\r\n                        }\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Banner","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Banner\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Footer\\Footer.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Footer\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Form\\Form.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Form\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\const.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\Header.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Input\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Input\\Input.tsx",["200"],[],"import { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { FC, useEffect, useState } from \"react\"\r\ninterface IInput {\r\n    label?: any,\r\n    type?: string,\r\n    placeholder?: string,\r\n    name?: string,\r\n    onChange?(value: string): any,\r\n    onFocus?(): any,\r\n    onBlur?(): any,\r\n    defaultValue?: string,\r\n    [k: string]: any\r\n}\r\nconst Input: FC<IInput> = function ({\r\n    label,\r\n    type = 'text',\r\n    name = \"\",\r\n    placeholder = '',\r\n    onChange = () => { },\r\n    onFocus = () => { },\r\n    onBlur = () => { },\r\n    defaultValue = '',\r\n    ...rest\r\n}) {\r\n    const [CurrentType, setCurrentType] = useState(type)\r\n    const [IsPassword, setIsPassword] = useState(type === 'password')\r\n    const [Active, setActive] = useState(!!defaultValue || false)\r\n    const [Value, setValue] = useState(defaultValue)\r\n\r\n    useEffect(() => {\r\n        defaultValue !== '' && setActive(true)\r\n        setValue(defaultValue)\r\n    }, [defaultValue])\r\n\r\n    const onChangeInput = (e : any) => {\r\n        setValue(e.target.value);\r\n        onChange(e.target.value)\r\n    }\r\n\r\n    const onFocusInput = () => {\r\n        onFocus()\r\n        setActive(true)\r\n    }\r\n    const onBlurInput = () => {\r\n        Value === '' && setActive(false)\r\n        onBlur()\r\n    }\r\n    useEffect(() => {\r\n        setCurrentType(IsPassword ? 'password' : 'text')\r\n    }, [IsPassword])\r\n    return (\r\n        <>\r\n            <div className=\"row-input\" {...rest}>\r\n                {\r\n                    label && <div className=\"label\">\r\n                        <img src={label} alt=\"\" />\r\n                    </div>\r\n                }\r\n                <div className={`input-placeholder ${Active ? 'active' : ''}`}>\r\n                <span className=\"placeholder\">{placeholder}</span>\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    onFocus={onFocusInput}\r\n                    onBlur={onBlurInput}\r\n                    onChange={onChangeInput}\r\n                    name={name}\r\n                    value={Value}\r\n                    type={CurrentType} />\r\n                {\r\n                    type === 'password' ?\r\n                        <div onClick={() => setIsPassword(!IsPassword)}  className=\"eye\"><FontAwesomeIcon icon={!IsPassword ? faEyeSlash : faEye } /></div> :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Layout\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Layout\\Layout.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Modal\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Modal\\Modal.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\cart.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\product\\[product].tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\product-detail\\[product-detail].tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Cart\\Cart.tsx",["201"],[],"import { Button, Form, Input, Select } from \"antd\";\r\nimport Link from \"next/link\";\r\nimport { FC, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { FaMinus, FaPlus, FaTrash } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDistricts, fetchProvinces, fetchWards } from \"services/GHNService\";\r\nimport { actionChangeCart } from \"store/actions\";\r\n\r\nconst Cart: FC = () => {\r\n    const formRef = useRef<any>()\r\n    const [Provinces, setProvinces] = useState<any[]>([])\r\n    const [ProvinceSelected, setProvinceSelected] = useState<any>(null)\r\n    const [Districts, setDistricts] = useState<any[]>([])\r\n    const [DistrictsSelected, setDistrictsSelected] = useState<any>(null)\r\n    const [Wards, setWards] = useState<any[]>([])\r\n\r\n    useEffect(() => {\r\n        fetchProvinces().then(res => setProvinces([...res.data]))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (ProvinceSelected) {\r\n            fetchDistricts(ProvinceSelected).then(res => {\r\n\r\n                setDistricts([...res.data])\r\n            })\r\n\r\n        }\r\n    }, [ProvinceSelected])\r\n\r\n    useEffect(() => {\r\n        if (DistrictsSelected) {\r\n            fetchWards(DistrictsSelected).then(res => {\r\n                console.log(res);\r\n\r\n                setWards([...res.data])\r\n            })\r\n\r\n        }\r\n    }, [DistrictsSelected])\r\n\r\n    const cart = useSelector((state: any) => state.cart)\r\n    const dispatch = useDispatch()\r\n    const handleQuantity = (o, add?: number) => {\r\n        let quantity = o.quantity + add\r\n        if (quantity < 1) quantity = 1\r\n        o.quantity = quantity\r\n        dispatch(actionChangeCart([...cart]))\r\n    }\r\n    const handleDelete = data => {\r\n        const index = cart.findIndex(o => o._id === data._id)\r\n        cart.splice(index, 1)\r\n        dispatch(actionChangeCart([...cart]))\r\n    }\r\n    const handleChangeQuantity = (e, o) => {\r\n        let value = Number(e.target.value)\r\n        if (!value || value < 1) value = 1\r\n        o.quantity = value\r\n        dispatch(actionChangeCart([...cart]))\r\n    }\r\n    const onChangeProvince = value => {\r\n        setProvinceSelected(value)\r\n        formRef.current.setFieldsValue({\r\n            ...formRef.current.getFieldsValue(),\r\n            district : null\r\n        })\r\n    }   \r\n\r\n    const onChangeDistrict = value => {\r\n        setDistrictsSelected(value)\r\n        formRef.current.setFieldsValue({\r\n            ...formRef.current.getFieldsValue(),\r\n            ward : null\r\n        })\r\n    }   \r\n\r\n    const handleFormDone = value => {\r\n        console.log(value);\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"cart mt-30\">\r\n                <div className=\"container\">\r\n                    <div className=\"title pb-20\">Giỏ hàng</div>\r\n                    <div className=\"flexbox mt-30\">\r\n                        <div className=\"col-8\">\r\n                            <div className=\"cart-items\">\r\n                                {\r\n                                    cart.map(o => <div key={o._id} className=\"item\">\r\n                                        <div className=\"flexbox\">\r\n                                            <div className=\"col-4\">\r\n                                                <div className=\"img\">\r\n                                                    <img src={o.thumbnail} alt=\"\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-8\">\r\n                                                <div className=\"info\">\r\n                                                    <div onClick={() => handleDelete(o)} className=\"delete\"><FaTrash /> </div>\r\n                                                    <div className=\"name\">\r\n                                                        {\r\n                                                            o.slug ? <Link href={`/product-detail/${o.slug}`}>{o.name}</Link>\r\n                                                                :\r\n                                                                'Ghép hình tranh gỗ'\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className=\"price\">{o.price.toLocaleString()}đ</div>\r\n                                                    <div className=\"quantity\">\r\n                                                        <div className=\"input\">\r\n                                                            <div onClick={() => handleQuantity(o, -1)} className=\"change\"><FaMinus /></div>\r\n                                                            <input onChange={e => handleChangeQuantity(e, o)} value={o.quantity} type=\"number\" name=\"\" id=\"\" />\r\n                                                            <div onClick={() => handleQuantity(o, 1)} className=\"change\"><FaPlus /></div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"sum\">Tổng : {(o.quantity * o.price).toLocaleString()}đ</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <div className=\"check-out\">\r\n                                <div className=\"sum\">Tạm tính: <span>{cart.reduce((prev, curr) => ({ sum: prev.sum + (curr.quantity * curr.price) }), { sum: 0 }).sum.toLocaleString()}đ</span></div>\r\n                                <div className=\"button\">Thanh toán</div>\r\n                                <div className=\"return\">\r\n                                    <Link href={'/'}>Tiếp tục mua sắm</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"title\">Thông tin vận chuyển</div>\r\n                    <Form onFinish={handleFormDone} ref={formRef}>\r\n                        <Form.Item rules={[{ required: true, message: 'Vui lòng nhập số điện thoại' }]} name={\"phone\"}>\r\n                            <Input placeholder=\"Điện thoại\" />\r\n                        </Form.Item>\r\n                        <Form.Item rules={[{ required: true, message: 'Vui lòng nhập tên' }]} name={\"name\"}>\r\n                            <Input placeholder=\"Họ tên\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item rules={[{ required: true, message: 'Vui lòng chọn tỉnh/thành' }]} name={\"province\"}>\r\n                            <Select\r\n                                showSearch\r\n                                optionFilterProp=\"ProvinceName\"\r\n                                placeholder=\"Tỉnh / thành phố\"\r\n                                onChange={onChangeProvince}\r\n                                filterOption={(input, option) => !!option?.children?.toString().toLowerCase().includes(input.toLowerCase())}\r\n                            >\r\n                                {\r\n                                    Provinces.map(o => <Select.Option key={o.ProvinceID} value={o.ProvinceID} >{o.ProvinceName}</Select.Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n                        {ProvinceSelected && <Form.Item dependencies={['province']} rules={[ { required: true, message: 'Vui lòng chọn quận/huyện' }, ]} name={\"district\"}>\r\n                            <Select\r\n                                showSearch\r\n                                optionFilterProp=\"DistrictName\"\r\n                                placeholder=\"Quận/Huyện\"\r\n                                filterOption={(input, option) => !!option?.children?.toString().toLowerCase().includes(input.toLowerCase())}\r\n                                onChange={onChangeDistrict}\r\n                            >\r\n                                {\r\n                                    Districts.map(o => <Select.Option key={o.DistrictID} value={o.DistrictID} >{o.DistrictName}</Select.Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>}\r\n\r\n                        {DistrictsSelected && <Form.Item rules={[{ required: true, message: 'Vui lòng chọn phường/xã' }]} name={\"ward\"}>\r\n                            <Select\r\n                                showSearch\r\n                                optionFilterProp=\"DistrictName\"\r\n                                placeholder=\"Phường/Xã\"\r\n                                filterOption={(input, option) => !!option?.children?.toString().toLowerCase().includes(input.toLowerCase())}\r\n                            >\r\n                                {\r\n                                    Wards.map(o => <Select.Option value={o.WardCode} key={o.WardCode} >{o.WardName}</Select.Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>}\r\n\r\n                        <Form.Item rules={[{ required: true, message: 'Vui lòng nhập địa chỉ' }]} name={\"address\"}>\r\n                            <Input placeholder=\"Địa chỉ cụ thể\" />\r\n                        </Form.Item>\r\n                        <Button htmlType=\"submit\">Đặt hàng</Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Cart\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Product\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Product\\Product.tsx",["202"],[],"import { Pagination } from \"components\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport { FC } from \"react\";\r\ninterface Product {\r\n    pageData: {\r\n        [k: string]: any\r\n    },\r\n    items: { [k: string]: any }\r\n}\r\nconst Product: FC<Product> = ({ pageData, items }) => {\r\n    const router = useRouter()\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"products\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"title\">{pageData.name}</h1>\r\n                    <div className=\"flexbox flex6 mt-30\">\r\n                        {items?.data.map(o => <div key={o._id} className=\"item\">\r\n                            <Link href={`/product-detail/${o.slug}`}>\r\n                                <a className=\"product\">\r\n                                    <div className=\"img\">\r\n                                        <img className=\"cover\" src={o.thumbnail} alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        {o.name}\r\n                                    </div>\r\n                                </a>\r\n                            </Link>\r\n                        </div>)}\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    </div>\r\n                    <Pagination\r\n                    onChange={(page) => router.push(`/product/${router.query.product}?page=${page}`)} \r\n                    current={items.current} \r\n                    pageSize={items.pageSize} \r\n                    total={items.total} />\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Product","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\ProductDetail\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\ProductDetail\\ProductDetail.tsx",["203","204","205"],[],"import { FC, useEffect, useState } from \"react\";\r\nimport { FaMinus, FaPlus } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Slider from \"react-slick\";\r\nimport { toast } from \"react-toastify\";\r\nimport { actionChangeCart } from \"store/actions\";\r\ninterface ProductDetail {\r\n    pageData: {\r\n        [k: string]: any\r\n    },\r\n}\r\nconst ProductDetail: FC<ProductDetail> = ({ pageData }) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector((state:any) => state.cart)\r\n    useEffect(() => {\r\n        console.log(cart);\r\n    },[cart])\r\n    \r\n    const [Quantity, setQuantity] = useState(1)\r\n    const [MainImage, setMainImage] = useState(pageData.thumbnail)\r\n    const handleQuantity = (e?: any, add?: number) => {\r\n        if (e) {\r\n            let value = Number(e.target.value)\r\n            if (!value || value < 1) value = 1\r\n            setQuantity(value)\r\n        } else {\r\n            let value = Quantity + (add || 0)\r\n            if (!value || value < 1) value = 1\r\n            setQuantity(value)\r\n        }\r\n    }\r\n\r\n    const handleAddToCart = () => {\r\n        const isHaveInCart = cart.find(o => o._id === pageData._id)\r\n        if(isHaveInCart) {\r\n            isHaveInCart.quantity += Quantity\r\n        }else {\r\n            cart.push({\r\n                ...pageData,\r\n                quantity : Quantity\r\n            })\r\n        }\r\n        dispatch(actionChangeCart([...cart]))\r\n        toast(`Đã thêm ${Quantity} sản phẩm vào giỏ hàng`)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"product-detail\">\r\n                <div className=\"container\">\r\n                    <div className=\"flexbox\">\r\n                        <div className=\"col-4\">\r\n                            <div className=\"image-slice\">\r\n                                <div className=\"main\">\r\n                                    <img src={MainImage} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"slider\">\r\n\r\n                                    <Slider infinite={false} speed={500} slidesToShow={3} slidesToScroll={3}>\r\n                                        <div onClick={()=>setMainImage(pageData.thumbnail)} className=\"img\">\r\n                                            <img src={pageData.thumbnail} alt=\"\" />\r\n                                        </div>\r\n                                        {\r\n                                            pageData.images?.map((o, index )=> <div onClick={()=>setMainImage(pageData.thumbnail)} key={o + index} className=\"img\">\r\n                                                <img src={o} alt=\"\" />\r\n                                            </div>)\r\n                                        }\r\n                                    </Slider>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <div className=\"detail\">\r\n                                <h1 className=\"name\">{pageData.name}</h1>\r\n                                <div className=\"price\">349.000d</div>\r\n                                <div className=\"quantity\">\r\n                                    <div className=\"flexbox\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"input\">\r\n                                                <div onClick={() => handleQuantity(null, -1)} className=\"change\"><FaMinus /></div>\r\n                                                <input value={Quantity} onChange={handleQuantity} type=\"number\" name=\"\" id=\"\" />\r\n                                                <div onClick={() => handleQuantity(null, 1)} className=\"change\"><FaPlus /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"add\">\r\n                                                <div onClick={handleAddToCart} className=\"button\">Thêm vào giỏ hàng</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"description\">\r\n                                    {pageData.description}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div dangerouslySetInnerHTML={{__html : pageData.content}} className=\"content\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetail","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Pagination\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Pagination\\Pagination.tsx",[],[],{"ruleId":"206","severity":1,"message":"207","line":25,"column":6,"nodeType":"208","endLine":25,"endColumn":8,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":20,"column":37,"nodeType":"212","endLine":20,"endColumn":194},{"ruleId":"210","severity":1,"message":"211","line":28,"column":37,"nodeType":"212","endLine":28,"endColumn":194},{"ruleId":"210","severity":1,"message":"211","line":36,"column":37,"nodeType":"212","endLine":36,"endColumn":194},{"ruleId":"210","severity":1,"message":"211","line":44,"column":37,"nodeType":"212","endLine":44,"endColumn":194},{"ruleId":"210","severity":1,"message":"211","line":52,"column":37,"nodeType":"212","endLine":52,"endColumn":194},{"ruleId":"210","severity":1,"message":"211","line":60,"column":37,"nodeType":"212","endLine":60,"endColumn":194},{"ruleId":"206","severity":1,"message":"213","line":206,"column":8,"nodeType":"208","endLine":206,"endColumn":76,"suggestions":"214"},{"ruleId":"206","severity":1,"message":"215","line":238,"column":11,"nodeType":"216","endLine":242,"endColumn":6,"suggestions":"217"},{"ruleId":"206","severity":1,"message":"218","line":244,"column":11,"nodeType":"216","endLine":248,"endColumn":6,"suggestions":"219"},{"ruleId":"206","severity":1,"message":"220","line":249,"column":11,"nodeType":"216","endLine":252,"endColumn":6,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"222","line":253,"column":11,"nodeType":"216","endLine":256,"endColumn":6,"suggestions":"223"},{"ruleId":"210","severity":1,"message":"211","line":376,"column":41,"nodeType":"212","endLine":376,"endColumn":73},{"ruleId":"206","severity":1,"message":"224","line":30,"column":8,"nodeType":"208","endLine":30,"endColumn":30,"suggestions":"225"},{"ruleId":"210","severity":1,"message":"211","line":38,"column":33,"nodeType":"212","endLine":38,"endColumn":77},{"ruleId":"210","severity":1,"message":"211","line":57,"column":25,"nodeType":"212","endLine":57,"endColumn":51},{"ruleId":"210","severity":1,"message":"211","line":94,"column":53,"nodeType":"212","endLine":94,"endColumn":85},{"ruleId":"210","severity":1,"message":"211","line":24,"column":41,"nodeType":"212","endLine":24,"endColumn":91},{"ruleId":"210","severity":1,"message":"211","line":54,"column":37,"nodeType":"212","endLine":54,"endColumn":67},{"ruleId":"210","severity":1,"message":"211","line":60,"column":45,"nodeType":"212","endLine":60,"endColumn":84},{"ruleId":"210","severity":1,"message":"211","line":64,"column":49,"nodeType":"212","endLine":64,"endColumn":71},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigationProps'. Either include it or remove the dependency array.","ArrayExpression",["226"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has missing dependencies: 'createPattern' and 'drawSlice'. Either include them or remove the dependency array.",["227"],"The 'downSize' function makes the dependencies of useEffect Hook (at line 303) change on every render. To fix this, wrap the definition of 'downSize' in its own useCallback() Hook.","VariableDeclarator",["228"],"The 'upSize' function makes the dependencies of useEffect Hook (at line 303) change on every render. To fix this, wrap the definition of 'upSize' in its own useCallback() Hook.",["229"],"The 'handleX' function makes the dependencies of useEffect Hook (at line 303) change on every render. To fix this, wrap the definition of 'handleX' in its own useCallback() Hook.",["230"],"The 'handleY' function makes the dependencies of useEffect Hook (at line 303) change on every render. To fix this, wrap the definition of 'handleY' in its own useCallback() Hook.",["231"],"React Hook useEffect has a missing dependency: 'interval'. Either include it or remove the dependency array.",["232"],{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [navigationProps]",{"range":"247","text":"248"},"Update the dependencies array to be: [Size, SelectedFrame, ImagePos, ImageSrc, ImageRatio, SelectedSlice, drawSlice, createPattern]",{"range":"249","text":"250"},"Wrap the definition of 'downSize' in its own useCallback() Hook.",{"range":"251","text":"252"},"Wrap the definition of 'upSize' in its own useCallback() Hook.",{"range":"253","text":"254"},"Wrap the definition of 'handleX' in its own useCallback() Hook.",{"range":"255","text":"256"},"Wrap the definition of 'handleY' in its own useCallback() Hook.",{"range":"257","text":"258"},"Update the dependencies array to be: [Current, interval, items, loop]",{"range":"259","text":"260"},[674,676],"[navigationProps]",[8227,8295],"[Size, SelectedFrame, ImagePos, ImageSrc, ImageRatio, SelectedSlice, drawSlice, createPattern]",[8987,9130],"useCallback(() => {\r\n        if (ImageRatio && initialRatio.current) {\r\n            setImageRatio(ImageRatio - initialRatio.current / 50)\r\n        }\r\n    })",[9153,9296],"useCallback(() => {\r\n        if (ImageRatio && initialRatio.current) {\r\n            setImageRatio(ImageRatio + initialRatio.current / 50)\r\n        }\r\n    })",[9318,9432],"useCallback(value => {\r\n        const x = Size.w / 100 * value\r\n        setImagePos({ ...ImagePos, x: ImagePos.x + x })\r\n    })",[9454,9568],"useCallback(value => {\r\n        const y = Size.h / 100 * value\r\n        setImagePos({ ...ImagePos, y: ImagePos.y + y })\r\n    })",[775,797],"[Current, interval, items, loop]"]