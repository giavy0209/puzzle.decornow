[{"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\index.tsx":"1","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\upload.tsx":"2","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\_app.tsx":"3","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Home\\Home.tsx":"4","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Home\\index.ts":"5","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\index.ts":"6","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Upload\\index.ts":"7","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Upload\\Upload.tsx":"8","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Banner\\Banner.tsx":"9","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Banner\\index.ts":"10","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Footer\\Footer.tsx":"11","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Footer\\index.ts":"12","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Form\\Form.tsx":"13","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Form\\index.ts":"14","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\const.ts":"15","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\Header.tsx":"16","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\index.ts":"17","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\index.ts":"18","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Input\\index.ts":"19","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Input\\Input.tsx":"20","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Layout\\index.ts":"21","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Layout\\Layout.tsx":"22","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Modal\\index.ts":"23","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Modal\\Modal.tsx":"24"},{"size":213,"mtime":1649998756462,"results":"25","hashOfConfig":"26"},{"size":237,"mtime":1649991744996,"results":"27","hashOfConfig":"26"},{"size":594,"mtime":1650081693393,"results":"28","hashOfConfig":"26"},{"size":5881,"mtime":1650272248566,"results":"29","hashOfConfig":"26"},{"size":49,"mtime":1649984838882,"results":"30","hashOfConfig":"26"},{"size":82,"mtime":1649992150039,"results":"31","hashOfConfig":"26"},{"size":53,"mtime":1649991687791,"results":"32","hashOfConfig":"26"},{"size":12767,"mtime":1650257922686,"results":"33","hashOfConfig":"26"},{"size":1709,"mtime":1650245103934,"results":"34","hashOfConfig":"26"},{"size":53,"mtime":1649989633867,"results":"35","hashOfConfig":"26"},{"size":3051,"mtime":1650245604366,"results":"36","hashOfConfig":"26"},{"size":53,"mtime":1649986028329,"results":"37","hashOfConfig":"26"},{"size":773,"mtime":1649996869081,"results":"38","hashOfConfig":"26"},{"size":47,"mtime":1649992704658,"results":"39","hashOfConfig":"26"},{"size":161,"mtime":1650245747715,"results":"40","hashOfConfig":"26"},{"size":5761,"mtime":1650244964454,"results":"41","hashOfConfig":"26"},{"size":53,"mtime":1649986050184,"results":"42","hashOfConfig":"26"},{"size":298,"mtime":1649996051763,"results":"43","hashOfConfig":"26"},{"size":50,"mtime":1649995700394,"results":"44","hashOfConfig":"26"},{"size":2517,"mtime":1649997030409,"results":"45","hashOfConfig":"26"},{"size":55,"mtime":1649985925745,"results":"46","hashOfConfig":"26"},{"size":395,"mtime":1650245541208,"results":"47","hashOfConfig":"26"},{"size":50,"mtime":1649992143285,"results":"48","hashOfConfig":"26"},{"size":508,"mtime":1649992578629,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cj44dy",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":1,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\index.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\upload.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\pages\\_app.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Home\\Home.tsx",["126","127","128","129","130","131","132"],[],"import { NextPage } from \"next\";\r\nimport { Banner, Layout } from 'components'\r\nconst Home: NextPage = () => {\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <div className=\"home\">\r\n                    <Banner dots={false} items={[{ img: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg' }]} />\r\n                    <section className=\"ss_1\">\r\n                        <div className=\"container\">\r\n                            <iframe width=\"100%\" style={{ aspectRatio: '16 / 9' }} src=\"https://www.youtube.com/embed/_0NrayhpdA0\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            <div className=\"button\">Bắt đầu thiết kế</div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"ss_2\">\r\n                        <div className=\"container\">\r\n                            <div className=\"title\">BEST SELLER</div>\r\n                            <div className=\"row column-6\">\r\n                                <div className=\"item\">\r\n                                    <div className=\"img\">\r\n                                        <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <div className=\"img\">\r\n                                        <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <div className=\"img\">\r\n                                        <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <div className=\"img\">\r\n                                        <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <div className=\"img\">\r\n                                        <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <div className=\"img\">\r\n                                        <img className=\"cover\" src=\"https://cdn.shopify.com/s/files/1/0108/2153/3753/products/4_bc1c8905-3c7c-4642-b168-ba20c85a4e43_200x.png?v=1637989309\" alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"ss_3\">\r\n                        <div className=\"container\">\r\n                            <div className=\"title\">PLUZZLE'S MESSAGE</div>\r\n                            <p>Chất liệu gỗ khiến cho sản phẩm trở nên độc đáo và sang trọng hơn. Đặc biệt, việc sử dụng công nghệ in UV với mực cao cấp tạo nên độ bền màu cao. Sản phẩm của Pluzzle được thiết kế và sản xuất tại Việt Nam. Sản phẩm gửi tới bạn chứa đựng tình yêu và tâm huyết của chúng mình. Hy vọng các bạn luôn hài lòng khi trải nghiệm sản phẩm của chúng mình.Pluzzle.vn</p>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"ss_4\">\r\n                        <div className=\"container\">\r\n                            <div className=\"title\">COLLECTION LIST</div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Home\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Upload\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\pages\\Upload\\Upload.tsx",["133","134"],[],"import { faEdit, faTrash, faTrashCan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Form, Layout, Modal } from \"components\";\r\nimport readFile from \"helpers/readFile\";\r\nimport { ChangeEvent, CSSProperties, FunctionComponent, useEffect, useRef, useState } from \"react\";\r\nimport { AiFillHeart } from \"react-icons/ai\";\r\nimport { FaArrowAltCircleDown, FaArrowAltCircleLeft, FaArrowAltCircleRight, FaArrowAltCircleUp, FaMinus, FaPlus } from \"react-icons/fa\";\r\n\r\nconst slice = [\r\n    {\r\n        slice : '/images/slice_1.png',\r\n        sliceIcon : '/images/slice_icon_1.png',\r\n    },\r\n    {\r\n        slice : '/images/slice_2.png',\r\n        sliceIcon : '/images/slice_icon_2.png',\r\n    },\r\n    {\r\n        slice : '/images/slice_3.png',\r\n        sliceIcon : '/images/slice_icon_3.png',\r\n    },\r\n    {\r\n        slice : '/images/slice_4.png',\r\n        sliceIcon : '/images/slice_icon_4.png',\r\n    },\r\n]\r\n\r\nconst Upload: FunctionComponent = () => {\r\n    const [SelectedSlice, setSelectedSlice] = useState(slice[0])\r\n    const [SelectedFrame, setSelectedFrame] = useState(1)\r\n    const [Size, setSize] = useState({ w: 3000, h: 3000 })\r\n    const [ImagePos, setImagePos] = useState({ x: 0, y: 0 })\r\n    const [ImageRatio, setImageRatio] = useState<number | null>(null)\r\n\r\n    const [ImageSrc, setImageSrc] = useState<null | string>(null)\r\n    const initialRatio = useRef<number | null>(null)\r\n    const canvas = useRef<HTMLCanvasElement>(null)\r\n    const ctx = useRef<CanvasRenderingContext2D | null>()\r\n    useEffect(() => {\r\n        if (canvas.current && !ctx.current) {\r\n            ctx.current = canvas.current.getContext('2d')\r\n        }\r\n        if (canvas.current) {\r\n            canvas.current.width = Size.w\r\n            canvas.current.height = Size.h\r\n        }\r\n    }, [Size])\r\n\r\n\r\n    const createPattern = async () => {\r\n        const img = await loadImage()\r\n        const imgW = img.width;\r\n        const imgH = img.height\r\n        const canvasPtrn = document.createElement('canvas')\r\n        canvasPtrn.width = Size.w\r\n        canvasPtrn.height = Size.h\r\n        const ctxPtrn = canvasPtrn.getContext('2d')\r\n        const percentX = Size.w / imgW;\r\n        const percentY = Size.h / imgH\r\n        const ratio = Math.min(percentX, percentY)\r\n\r\n        if (!initialRatio.current) initialRatio.current = ratio\r\n        if (ImageRatio === null) {\r\n            setImageRatio(initialRatio.current)\r\n            ctxPtrn?.drawImage(\r\n                img,\r\n                0, 0,\r\n                imgW, imgH,\r\n                ImagePos.x, ImagePos.y,\r\n                Size.w * initialRatio.current, Size.h * initialRatio.current\r\n            )\r\n        } else {\r\n            ctxPtrn?.drawImage(\r\n                img,\r\n                0, 0,\r\n                imgW, imgH,\r\n                ImagePos.x, ImagePos.y,\r\n                Size.w * ImageRatio, Size.h * ImageRatio\r\n            )\r\n        }\r\n        return canvasPtrn\r\n    }\r\n\r\n    const loadImage = (): Promise<HTMLImageElement> => new Promise(r => {\r\n        if (ImageSrc) {\r\n            const img = new Image();\r\n            img.src = ImageSrc\r\n            img.onload = () => {\r\n                r(img)\r\n            }\r\n        } else {\r\n        }\r\n    })\r\n\r\n    const drawSlice = () : Promise<any> => new Promise (r => {\r\n        const img = new Image()\r\n        img.src = SelectedSlice.slice\r\n        img.onload = () => {\r\n            const canvasPtrn = document.createElement('canvas')\r\n            canvasPtrn.width = Size.w\r\n            canvasPtrn.height = Size.h\r\n            const ctxPtrn = canvasPtrn.getContext('2d')\r\n            ctxPtrn?.drawImage(img, 0, 0, img.width, img.height, 0, 0, Size.w, Size.h)\r\n            r(canvasPtrn)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (ctx.current) {\r\n            ctx.current.clearRect(0, 0, Size.w, Size.h)\r\n            ctx.current.fillStyle = '#ccc'\r\n            ctx.current.beginPath();\r\n            if (SelectedFrame === 0 || SelectedFrame === 1) {\r\n                ctx.current.fillRect(0, 0, Size.w, Size.h)\r\n                if (ImageSrc) {\r\n                    createPattern()\r\n                        .then(cP => {\r\n                            if (ctx.current) {\r\n                                const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                ctx.current.fillStyle = pattern\r\n                                ctx.current.fillRect(0, 0, Size.w, Size.h)\r\n                            }\r\n                            drawSlice()\r\n                            .then(cP => {\r\n                                if (ctx.current) {\r\n                                    const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                    ctx.current.fillStyle = pattern\r\n                                    ctx.current.fillRect(0, 0, Size.w, Size.h)\r\n                                }\r\n                            })\r\n                        })\r\n                }\r\n            }\r\n            if (SelectedFrame === 2) {\r\n                ctx.current.arc(\r\n                    Size.w / 2,\r\n                    Size.h / 2,\r\n                    Size.w / 2,\r\n                    0,\r\n                    Math.PI * 2\r\n                )\r\n                ctx.current.fill()\r\n\r\n                if (ImageSrc) {\r\n                    createPattern()\r\n                        .then(cP => {\r\n                            if (ctx.current) {\r\n                                const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                ctx.current.fillStyle = pattern\r\n                                ctx.current.fill()\r\n                            }\r\n                            drawSlice()\r\n                            .then(cP => {\r\n                                if (ctx.current) {\r\n                                    const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                    ctx.current.fillStyle = pattern\r\n                                    ctx.current.fill()\r\n                                }\r\n                            })\r\n                        })\r\n                }\r\n            }\r\n            if (SelectedFrame === 3) {\r\n                const x = Size.w / 2\r\n                const y = Size.h / 4;\r\n                const xPadding = x / 50\r\n                ctx.current.lineWidth = 10\r\n                ctx.current.moveTo(x, y)\r\n                ctx.current.bezierCurveTo(x, 0, xPadding, 0, xPadding, y);\r\n                ctx.current.bezierCurveTo(0, Size.h / 2, x / 4, y * 2, x, Size.h)\r\n                ctx.current.bezierCurveTo(Size.w - x / 4, y * 2, Size.w, Size.h / 2, Size.w - xPadding, y);\r\n                ctx.current.bezierCurveTo(Size.w - xPadding, 0, x, 0, x, y);\r\n                ctx.current.strokeStyle = '#000';\r\n                ctx.current.fill()\r\n\r\n                if (ImageSrc) {\r\n                    createPattern()\r\n                        .then(cP => {\r\n                            if (ctx.current) {\r\n                                const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                ctx.current.fillStyle = pattern\r\n                                ctx.current.fill()\r\n                            }\r\n                            drawSlice()\r\n                            .then(cP => {\r\n                                if (ctx.current) {\r\n                                    const pattern: any = ctx.current.createPattern(cP, 'no-repeat')\r\n                                    ctx.current.fillStyle = pattern\r\n                                    ctx.current.fill()\r\n                                }\r\n                            })\r\n                        })\r\n                }\r\n            }\r\n            drawSlice()\r\n            ctx.current.closePath();\r\n        }\r\n\r\n\r\n    }, [Size, SelectedFrame, ImagePos, ImageSrc, ImageRatio, SelectedSlice])\r\n\r\n\r\n    useEffect(() => {\r\n        setImageRatio(null)\r\n        initialRatio.current = null\r\n        if (SelectedFrame === 0) {\r\n            setSize({\r\n                w: 2100,\r\n                h: 3000\r\n            })\r\n        }\r\n        if (SelectedFrame === 1) {\r\n            setSize({\r\n                w: 3000,\r\n                h: 3000\r\n            })\r\n        }\r\n        if (SelectedFrame === 2) {\r\n            setSize({\r\n                w: 3000,\r\n                h: 3000\r\n            })\r\n        }\r\n        if (SelectedFrame === 3) {\r\n            setSize({\r\n                w: 2700,\r\n                h: 3000\r\n            })\r\n        }\r\n    }, [SelectedFrame])\r\n\r\n    const downSize = () => {\r\n        if (ImageRatio && initialRatio.current) {\r\n            setImageRatio(ImageRatio - initialRatio.current / 50)\r\n        }\r\n    }\r\n\r\n    const upSize = () => {\r\n        if (ImageRatio && initialRatio.current) {\r\n            setImageRatio(ImageRatio + initialRatio.current / 50)\r\n        }\r\n    }\r\n    const handleX = value => {\r\n        const x = Size.w / 100 * value\r\n        setImagePos({ ...ImagePos, x: ImagePos.x + x })\r\n    }\r\n    const handleY = value => {\r\n        const y = Size.h / 100 * value\r\n        setImagePos({ ...ImagePos, y: ImagePos.y + y })\r\n    }\r\n\r\n    const handleChangeImage = async (event: ChangeEvent<HTMLInputElement>) => {\r\n        event.persist()\r\n        const file = event?.target?.files?.[0]\r\n        if (!file) return\r\n        const url : string = (await readFile(file)) as string\r\n        setImageSrc(url)\r\n        setImageRatio(null)\r\n        initialRatio.current = null\r\n    }\r\n\r\n    const handleChangeSlide = (o) => {\r\n        setSelectedSlice(o)\r\n        initialRatio.current = null\r\n        setImageRatio(null)\r\n    }\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <div className=\"upload\">\r\n                    <div className=\"container\">\r\n                        <div className=\"title\">THIẾT KẾ BỘ XẾP HÌNH GỖ CỦA RIÊNG BẠN</div>\r\n                        <div id=\"canvas\">\r\n                            <canvas ref={canvas}></canvas>\r\n                        </div>\r\n                        <div className=\"upload\">\r\n                            <label htmlFor=\"upload\">\r\n                                Tải hình lên\r\n                            </label>\r\n                            <input onChange={handleChangeImage} type=\"file\" name=\"\" id=\"upload\" />\r\n                        </div>\r\n                        <div className=\"controls\">\r\n                            <div onClick={upSize} className=\"control\"><FaPlus /></div>\r\n                            <div onClick={downSize} className=\"control\"><FaMinus /></div>\r\n                            <div onClick={() => handleY(-1)} className=\"control\"><FaArrowAltCircleUp /></div>\r\n                            <div onClick={() => handleY(1)} className=\"control\"><FaArrowAltCircleDown /></div>\r\n                            <div onClick={() => handleX(-1)} className=\"control\"><FaArrowAltCircleLeft /></div>\r\n                            <div onClick={() => handleX(1)} className=\"control\"><FaArrowAltCircleRight /></div>\r\n                        </div>\r\n                        <div className=\"frame\">\r\n                            <div className=\"title\">Khung hình</div>\r\n                            <div onClick={() => setSelectedFrame(0)} className={`frame_1 ${SelectedFrame === 0 ? 'selected' : ''}`}>\r\n                                <span>Hình chữ nhật 21x30</span>\r\n                            </div>\r\n                            <div onClick={() => setSelectedFrame(1)} className={`frame_2 ${SelectedFrame === 1 ? 'selected' : ''}`}>Hình vuông 30x30</div>\r\n                            <div onClick={() => setSelectedFrame(2)} className={`frame_3 ${SelectedFrame === 2 ? 'selected' : ''}`}>Hình tròn 30x30</div>\r\n                            <div onClick={() => setSelectedFrame(3)} className={`frame_4 ${SelectedFrame === 3 ? 'selected' : ''}`}>\r\n                                <AiFillHeart />\r\n                                <span>Trái tim 27x30</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"slices\">\r\n                            <div className=\"title\">Đường cắt</div>\r\n                            \r\n                            {\r\n                                slice.map(o => <div onClick={()=>handleChangeSlide(o)} key={o.slice}  className={`slice ${SelectedSlice.slice === o.slice ? 'selected' : ''}`}>\r\n                                    <img src={o.sliceIcon} alt=\"\" />\r\n                                </div> )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Upload","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Banner\\Banner.tsx",["135","136"],[],"import Link from \"next/link\"\r\nimport { CSSProperties, FunctionComponent, useEffect, useState } from \"react\"\r\n\r\ninterface item {\r\n    img: string,\r\n    link?: string\r\n}\r\n\r\ninterface Banner {\r\n    items: item[],\r\n    loop?: boolean,\r\n    interval?: number,\r\n    dots? : boolean\r\n}\r\n\r\nconst Banner: FunctionComponent<Banner> = ({ items, loop = true, interval = 5000,dots = true }) => {\r\n    const [Current, setCurrent] = useState(0)\r\n    useEffect(() => {\r\n        let timeout : any;\r\n        if (loop) {\r\n            timeout = setTimeout(() => {\r\n                if (Current + 1 > items.length - 1) setCurrent(0)\r\n                else setCurrent(Current + 1)\r\n            }, interval);\r\n\r\n        }\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    }, [Current, items, loop])\r\n    return (\r\n        <>\r\n            <div className=\"banner\">\r\n                <div className=\"track\">\r\n                    <div style={{ '--total': items.length, '--current': Current } as CSSProperties} className=\"list\">\r\n                        {\r\n                            items.map((o,i) => <div key={o.img+i} className=\"item\">\r\n                                <img className=\"cover\" src={o.img} alt=\"\" />\r\n                            </div>)\r\n                        }\r\n\r\n                    </div>\r\n                    {dots && <div className=\"dots\">\r\n                        {\r\n                            items.map((o,index) => <div key={o.link + 'index'} onClick={()=>setCurrent(index)} className={`dot ${Current === index? 'active' : ''}`}></div> )\r\n                        }\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Banner","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Banner\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Footer\\Footer.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Footer\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Form\\Form.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Form\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\const.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\Header.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Header\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Input\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Input\\Input.tsx",["137"],[],"import { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { FC, useEffect, useState } from \"react\"\r\ninterface IInput {\r\n    label?: any,\r\n    type?: string,\r\n    placeholder?: string,\r\n    name?: string,\r\n    onChange?(value: string): any,\r\n    onFocus?(): any,\r\n    onBlur?(): any,\r\n    defaultValue?: string,\r\n    [k: string]: any\r\n}\r\nconst Input: FC<IInput> = function ({\r\n    label,\r\n    type = 'text',\r\n    name = \"\",\r\n    placeholder = '',\r\n    onChange = () => { },\r\n    onFocus = () => { },\r\n    onBlur = () => { },\r\n    defaultValue = '',\r\n    ...rest\r\n}) {\r\n    const [CurrentType, setCurrentType] = useState(type)\r\n    const [IsPassword, setIsPassword] = useState(type === 'password')\r\n    const [Active, setActive] = useState(!!defaultValue || false)\r\n    const [Value, setValue] = useState(defaultValue)\r\n\r\n    useEffect(() => {\r\n        defaultValue !== '' && setActive(true)\r\n        setValue(defaultValue)\r\n    }, [defaultValue])\r\n\r\n    const onChangeInput = (e : any) => {\r\n        setValue(e.target.value);\r\n        onChange(e.target.value)\r\n    }\r\n\r\n    const onFocusInput = () => {\r\n        onFocus()\r\n        setActive(true)\r\n    }\r\n    const onBlurInput = () => {\r\n        Value === '' && setActive(false)\r\n        onBlur()\r\n    }\r\n    useEffect(() => {\r\n        setCurrentType(IsPassword ? 'password' : 'text')\r\n    }, [IsPassword])\r\n    return (\r\n        <>\r\n            <div className=\"row-input\" {...rest}>\r\n                {\r\n                    label && <div className=\"label\">\r\n                        <img src={label} alt=\"\" />\r\n                    </div>\r\n                }\r\n                <div className={`input-placeholder ${Active ? 'active' : ''}`}>\r\n                <span className=\"placeholder\">{placeholder}</span>\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    onFocus={onFocusInput}\r\n                    onBlur={onBlurInput}\r\n                    onChange={onChangeInput}\r\n                    name={name}\r\n                    value={Value}\r\n                    type={CurrentType} />\r\n                {\r\n                    type === 'password' ?\r\n                        <div onClick={() => setIsPassword(!IsPassword)}  className=\"eye\"><FontAwesomeIcon icon={!IsPassword ? faEyeSlash : faEye } /></div> :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input","D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Layout\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Layout\\Layout.tsx",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Modal\\index.ts",[],[],"D:\\Pham Gia Vy\\work\\puzzle.decornow\\fe\\src\\components\\Modal\\Modal.tsx",[],[],{"ruleId":"138","severity":1,"message":"139","line":21,"column":41,"nodeType":"140","endLine":21,"endColumn":198},{"ruleId":"138","severity":1,"message":"139","line":29,"column":41,"nodeType":"140","endLine":29,"endColumn":198},{"ruleId":"138","severity":1,"message":"139","line":37,"column":41,"nodeType":"140","endLine":37,"endColumn":198},{"ruleId":"138","severity":1,"message":"139","line":45,"column":41,"nodeType":"140","endLine":45,"endColumn":198},{"ruleId":"138","severity":1,"message":"139","line":53,"column":41,"nodeType":"140","endLine":53,"endColumn":198},{"ruleId":"138","severity":1,"message":"139","line":61,"column":41,"nodeType":"140","endLine":61,"endColumn":198},{"ruleId":"141","severity":2,"message":"142","line":72,"column":59,"nodeType":"143","messageId":"144"},{"ruleId":"145","severity":1,"message":"146","line":200,"column":8,"nodeType":"147","endLine":200,"endColumn":76,"suggestions":"148"},{"ruleId":"138","severity":1,"message":"139","line":307,"column":37,"nodeType":"140","endLine":307,"endColumn":69},{"ruleId":"145","severity":1,"message":"149","line":30,"column":8,"nodeType":"147","endLine":30,"endColumn":30,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"139","line":38,"column":33,"nodeType":"140","endLine":38,"endColumn":77},{"ruleId":"138","severity":1,"message":"139","line":57,"column":25,"nodeType":"140","endLine":57,"endColumn":51},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","JSXText","unescapedEntityAlts","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createPattern' and 'drawSlice'. Either include them or remove the dependency array.","ArrayExpression",["151"],"React Hook useEffect has a missing dependency: 'interval'. Either include it or remove the dependency array.",["152"],{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [Size, SelectedFrame, ImagePos, ImageSrc, ImageRatio, SelectedSlice, drawSlice, createPattern]",{"range":"157","text":"158"},"Update the dependencies array to be: [Current, interval, items, loop]",{"range":"159","text":"160"},[7871,7939],"[Size, SelectedFrame, ImagePos, ImageSrc, ImageRatio, SelectedSlice, drawSlice, createPattern]",[775,797],"[Current, interval, items, loop]"]